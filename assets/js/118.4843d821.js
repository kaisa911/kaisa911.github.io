(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{692:function(t,e,r){"use strict";r.r(e);var a=r(17),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("some exercises of leetcode")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Number")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Difficulty")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("1")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/1-TwoSum.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Two Sum 两数之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("2")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/2-AddTwoNumbers.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Add Two Numbers 两数相加"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("3")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/3-LongestSubstringWithoutRepeatingCharacters.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Longest Substring Without Repeating Characters 无重复字符的最长子串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("4")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Hard/4-MedianofTwoSortedArrays.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Median of Two Sorted Arrays 两个排序数组的中位数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("5")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/5-LongestPalindromicSubstring.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Longest Palindromic Substring 最长回文子串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("6")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/6-ZigZagConveresion.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ZigZag Converesion Z 字形变换"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("7")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/7-ReverseInteger.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reverse Integer 翻转整数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("8")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/8-StringtoInteger.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("String to Integer (atoi) 字符串转为整数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("9")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/9-PalindromeNumber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Palindrome Number 回文数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("10")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/10-RegularExpressionMatching.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Regular Expression Matching 正则表达式匹配"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("11")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/11-ContainerWithMostWater.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Container With Most Water 盛最多水的容器"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("12")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/12-IntegertoRoman.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Integer to Roman 整数转罗马数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("13")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/13-RomantoInteger.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Roman to Integer 罗马数字转整数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("14")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/14-LongestCommonPrefix.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Longest Common Prefix 最长共同前缀"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("15")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/15-3Sum.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("3Sum 三数之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("16")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/16-3SumClosest.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("3Sum Closest 最接近的三数之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("17")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/17-LetterCombinationsofaPhoneNumber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Letter Combinations of a PhoneNumber 电话号码的字母组合"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("18")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/18-4Sum.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("4Sum 四数之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("19")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/19-RemoveNthNodeFromEndofList.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Remove Nth Node From End of List 删除链表的倒数第 N 个节点"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("20")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/20-ValidParentheses.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Valid Parentheses 有效的括号"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("21")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/21-MergeTwoSortedLists.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Merge Two Sorted Lists 合并两个有序链表"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("22")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/22-GenerateParentheses.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Generate Parentheses 生成括号"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("23")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Hard/23-MergekSortedLists.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Merge k Sorted Lists 合并 K 个排序链表"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("24")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/24-SwapNodesInPairs.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swap Nodes In Pairs 两两交换链表中的节点"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("25")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/25-ReverseNodesInk-Group.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reverse Nodes in k-Group 每 k 个一组翻转链表"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("26")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/26-RemoveDuplicatesfromSortedArray.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Remove Duplicates from Sorted Array 从有序数组中删除重复项"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("27")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/27-RemoveElement.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Remove Element 移除元素"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("28")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/28-ImplementstrStr.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Implement strStr() 实现 strStr()"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("29")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/29-DivideTwoIntegers.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Divide Two Integers 两数相除"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("30")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/30-SubstringwithConcatenationofAllWords.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Substring with Concatenation of All Words 串联所有单词的子串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("31")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/31-Next-permutation.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Next-permutation 下一个排列"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("32")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/32-LongestValidParentheses.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Longest Valid Parentheses 最长有效括号"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("33")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/33-SearchinRotatedSortedArray.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Search in Rotated Sorted Array 在旋转有序数组中搜索"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("34")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/34-SearchforaRange.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Search for a Range 搜索范围"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("35")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/35-SearchInsertPosition.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Search Insert Position 搜索插入位置"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("36")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/36-ValidSudoku.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Valid Sudoku 验证数独"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("37")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/37-SudokuSolver.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sudoku Solver 解数独"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("38")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/38-CountandSay.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Count and Say 数数并说"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("39")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/39-CombinationSum.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("CombinationSum 组合之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("40")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/40-CombinationSumII.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("CombinationSumII 组合之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("41")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/41-FirstMissingPositive.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("First Missing Positive 缺失的第一个正数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("42")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/42-TrappingRainWater.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Trapping Rain Water 接雨水"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("43")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/43-MaximumSubarray.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Maximum Subarray 最大子序和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("44")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/44-WildcardMatching.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wildcard Matching 通配符匹配"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("45")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/45-JumpGameII.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jump Game II 跳跃游戏 II"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("46")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/46-Permutations.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Permutations 全排列"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("47")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/47-PermutationsII.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("PermutationsII 全排列 II"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("48")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/48-RotateImage.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rotate Image 旋转图像"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("49")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/49-GroupAnagrams.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Group Anagrams 字母异位词分组"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("50")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/50-Pow.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pow(x, n) Pow(x, n)"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("51")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/51-N-Queens.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("N-Queens N 皇后"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("52")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/52-N-QueensII.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("N-Queens II N 皇后 2"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("53")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/53-MultiplyString.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Multiply String 字符串相乘"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("54")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/54-SpiralMatrix.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spiral Matrix 螺旋矩阵"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("55")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/55-JumpGame.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jump Game 跳跃游戏"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("56")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/56-MergeIntervals.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Merge Intervals 合并区间"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("57")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/57-InsertInterval.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Insert Interval 插入区间"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("58")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/58-LengthofLastWord.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Length of Last Word 最后一个单词的长度"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("59")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/59-SpiralMatrixII.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spiral Matrix II 螺旋矩阵 II"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("60")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/60PermutationSequence.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Permutation Sequence 第 k 个排列"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("61")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/61-RotateList.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rotate List 旋转链表"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("62")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/62-UniquePaths.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unique Paths 不同路径"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("63")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/63-UniquePathsII.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unique Paths II 不同路径 2"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("64")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/64-MinimumPathSum.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Minimum Path Sum 最小路径和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("65")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Hard/65-ValidNumber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Valid Number 有效数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("66")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/66-PlusOne.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Plus One 加一"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("67")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/67-AddBinary.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Add Binary 二进制求和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("68")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Hard/68-TextJustification.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Text Justification 文本左右对齐"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("69")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/69-Sqrt.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sqrt(x) x 的平方根"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("70")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/70-ClimbingStairs.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Climbing Stairs 爬楼梯"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("71")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/71-SimplifyPath.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("SimplifyPath 简化路径"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("72")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Hard/72-EditDistance.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Edit Distance 编辑距离"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("73")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/73-SetMatrixZeroes.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Set Matrix Zeroes 矩阵置零"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("74")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/74-Searcha2DMatrix.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Search a 2D Matrix 搜索二维矩阵"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("75")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/75-SortColors.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sort Colors 颜色分类"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("77")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/77-Combinations.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Combinations 组合"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("78")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/78-Subsets.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Subsets 子集"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("80")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/80-RemoveDuplicatesfromSortedArrayII.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Remove Duplicates from Sorted Array II 删除排序数组中的重复项 II"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("83")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/83-RemoveDuplicatesfromSortedList.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Remove Duplicates from Sorted List 删除排序链表中的重复元素"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("84")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/84-LargestRectangleinHistogram.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Largest Rectangle in Histogram 柱状图中最大的矩形"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("85")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Hard/85-MaximalRectangle.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Maximal Rectangle 最大矩形"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Hard")])]),t._v(" "),r("tr",[r("td",[t._v("88")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/88-MergeSortedArray.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Merge Sorted Array 合并两个有序数组"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("94")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/94-BinaryTreeInorderTraversal.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Binary Tree Inorder Traversal 二叉树的中序遍历"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("100")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/100-SameTree.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Same Tree 相同的树"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("105")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/105-ConstructBinaryTreefromPreorderandInorderTraversal.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Construct Binary Tree from Preorderand Inorder Traversal 从前序与中序遍历序列构造二叉树"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("107")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/107-BinaryTreeLevelOrderTraversalII.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Binary Tree Level Order Traversal II 二叉树的层次遍历 II"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("109")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/109-ConvertSortedArraytoBinarySearchTree.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Convert Sorted Array to Binary Search Tree 将有序数组转换为二叉搜索树"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("110")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/110-BalancedBinaryTree.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Balanced Binary Tree 平衡二叉树"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("111")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/111-MinimumDepthofBinaryTree.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Minimum Depth of Binary Tree 二叉树的最小深度"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("112")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/112-PathSum.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Path Sum 路径总和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("118")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/118-PascalsTriangle.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pascals Triangle 杨辉三角"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("119")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/119-PascalsTriangleii.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pascals Triangle ii 杨辉三角 2"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("125")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/125-isPalindrome.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("IsPalindrome 验证回文串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("129")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/129-SumRoottoLeafNumbers.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sum Root to Leaf Numbers 求根到叶子节点数字之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("136")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/136-singleNumber.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("SingleNumber 只出现一次的数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("141")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/141-LinkedListCycle.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linked List Cycle 环形链表"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("155")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/155-MinStack.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("MinStack 最小栈"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("165")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/165-CompareVersionNumbers.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Compare Version Numbers 比较版本号"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("167")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/167-TwoSumII.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("TwoSum-II 两数之和 II - 输入有序数组"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("169")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/169-majorityElement.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("MajorityElement 求众数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("171")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/171-ExcelSheetColumnNumber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Excel Sheet Column Number Excel 表列序号"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("172")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/172-FactorialTrailingZeroes.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Factorial Trailing Zeroes 阶乘后的零"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("189")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/189-rotateArray.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("RotateArray 旋转数组"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("190")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/190-reverseBits.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReverseBits 颠倒二进制位"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("191")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/191-hammingWeight.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("HammingWeight 颠倒二进制位"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("198")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/198-HouseRobber.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("House Robber 打家劫舍"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("199")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/199-BinaryTreeRightSideView.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Binary Tree Right Side View 二叉树的右视图"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("202")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/202-HappyNumber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Happy Number 快乐数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("203")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/203-RemoveLinkedListElements.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Remove Linked List Elements 删除链表中的元素"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("204")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/204-CountPrimes.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Count Primes 计数质数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("205")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/205-IsomorphicStrings.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Isomorphic Strings 同构字符串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("206")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/206-ReverseLinkedList.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reverse Linked List 反转链表"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("217")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/217-containsDuplicate.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ContainsDuplicate 存在重复元素"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("219")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/219-containsNearbyDuplicate.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ContainsNearbyDuplicate 存在重复元素 II"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("225")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/225-ImplementStackusingQueues.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Implement Stack using Queues 用队列实现栈"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("231")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/231-isPowerOfTwo.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("IsPowerOfTwo 2 的幂"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("232")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/232-ImplementQueueusingStacks.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Implement Queue using Stacks 用栈实现队列"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("238")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/238-ProductofArrayExceptSelf.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Product of Array Except Self 除自身以外数组的乘积"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("242")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/242-ValidAnagram.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Valid Anagram 有效的字母异位词"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("257")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/257-BinaryTreePaths.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Binary Tree Paths 二叉树的所有路径"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("258")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/258-AddDigits.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Add Digits 各位相加"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("263")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/263-UglyNumber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ugly Number 丑数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("268")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/268-missingNumber.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("MissingNumber 缺失数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("278")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/278-FirstBadVersion.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("First Bad Version 第一个错误的版本"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("283")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/283-moveZeroes.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("MoveZeroes 移动零"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("287")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/290-WordPattern.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Word Pattern 单词规律"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("290")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/290-WordPattern.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Word Pattern 单词规律"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("300")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Medium/300-LongestIncreasingSubsequence.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Longest Increasing Subsequence 最长上升子序列"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("303")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/303-RangeSumQuery-Immutable.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Range Sum Query-Immutable 区域和检索 - 数组不可变"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("326")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/326-isPowerOfThree.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("IsPowerOfThree 3 的幂"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("342")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/342-isPowerOfFour.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("IsPowerOfFour 4 的幂"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("344")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/344-reverseString.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReverseString 反转字符串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("349")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/349-IntersectionofTwoArrays.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Intersection of Two Arrays 两个数组的交集"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("350")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/350-IntersectionofTwoArraysII.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Intersection of Two ArraysII 两个数组的交集"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("371")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/371-SumofTwoIntegers.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sum of Two Integers 两个整数相加"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("377")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/377-CombinationSumIV.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Combination Sum IV 组合总和 Ⅳ"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Medium")])]),t._v(" "),r("tr",[r("td",[t._v("383")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/383-RansomNote.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ransom Note 赎金信"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("387")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/387-firstUniqChar.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("FirstUniqChar 字符串中的第一个唯一字符"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("389")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/389-findTheDifference.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("FindTheDifference 找不同"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("392")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/392-IsSubsequence.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Is Subsequence 判断子序列"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("400")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/400-FindNthDigit.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Find Nth Digit 第 N 个数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("405")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/405-ToHex.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToHex 转 16 进制"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("414")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/414-thirdMax.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ThirdMax 转 16 进制"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("448")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/448-FindAllNumbersDisappearedinanArray.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Find All Numbers Disappeared in an Array 找到所有数组中消失的数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("455")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/455-AssignCookies.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Assign Cookies 分发饼干"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("459")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/459-RepeatedSubstringPattern.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Repeated Substring Pattern 重复的子字符串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("485")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/485-findMaxConsecutiveOnes.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Find Max Consecutive Ones 最大连续 1 的个数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("509")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/509-Fibonacci.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fibonacci 斐波那契数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("541")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/541-ReverseStringII.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reverse String II 反转字符串 II"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("561")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/561-arrayPairSum.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ArrayPairSum 数组拆分 I"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("581")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/581-ShortestUnsortedContinuousSubarray.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Shortest Unsorted Continuous Subarray 最短无序连续子数组"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("606")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/606-ConstructStringfromBinaryTree.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Construct String from Binary Tree 根据二叉树创建字符串"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("628")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/628-maximumProduct.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("MaximumProduct 三个数的最大乘积"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("643")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/643-findMaxAverage.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("FindMaxAverage 子数组最大平均数 I"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("653")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/653-TwoSumIV-InputisaBST.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Two Sum IV - Input is a BST 两数之和 IV - 输入 BST"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("703")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/703-KthLargestElementinaStream.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kth Largest Element in a Stream 数据流中的第 K 大元素"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("704")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/704-BinarySearch.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Binary Search 二分查找"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("709")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/709-toLowerCase.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToLowerCase 转换成小写字母"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("720")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/720-LongestWordinDictionary.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Longest Word in Dictionary 词典中最长的单词"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("724")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/724-FindPivotIndex.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("FindPivotIndex 寻找数组的中心索引"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("746")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/746-MinCostClimbingStairs.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Min Cost Climbing Stairs 使用最小花费爬楼梯"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("747")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/747-dominantIndex.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("DominantIndex 至少是其他数字两倍的最大数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("905")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/905-sortArrayByParity.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("SortArrayByParity 按奇偶排序数组"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("907")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/907-sortedSquares.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("SortedSquares 有序数组的平方"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("933")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/933-NumberofRecentCalls.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Number of Recent Calls 最近的请求次数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("942")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/942-DIStringMatch.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("DI String Match 增减字符串匹配"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("989")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/989-addToArrayForm.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("AddToArrayForm 数组形式的整数加法"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("994")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/994-RottingOranges.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rotting Oranges 腐烂的橘子"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("1002")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/1002-commonChars.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("CommonChars 查找常用字符"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("1122")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/1122-RelativeSortArray.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Relative Sort Array 数组的相对排序"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("1137")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/1137-N-thTribonacciNumber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("N-th Tribonacci Number 第 N 个泰波那契数"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("1365")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Solutions/Easy/1365-HowManyNumbersAreSmallerThantheCurrentNumber.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("How Many Numbers Are Smaller Than the Current Number 有多少小于当前数字的数字"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("1431")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/1431-KidsWiththeGreatestNumberofCandies.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kids With the Greatest Number of Candies 拥有最多糖果的孩子"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("1945")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Easy/1945-SumofDigitsofStringAfterConvert.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sum of Digits of String After Convert 字符串转化后的各位数字之和"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("2038")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/Medium/2038-RemoveColoredPiecesifBothNeighborsaretheSameColor.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Remove Colored Pieces if Both Neighbors are the Same Color 如果相邻两个颜色均相同则删除当前颜色"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])])])]),t._v(" "),r("h2",{attrs:{id:"剑指-offer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer"}},[t._v("#")]),t._v(" 剑指 Offer")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Number")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Name")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Difficulty")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("10 - I")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/%E5%89%91%E6%8C%87Offer/10(1)-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("斐波那契数列"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])]),t._v(" "),r("tr",[r("td",[t._v("22")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[r("a",{attrs:{href:"https://github.com/kaisa911/LeetCode/blob/master/Thinkings/%E5%89%91%E6%8C%87Offer/22-%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("链表中倒数第 k 个节点"),r("OutboundLink")],1)]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Easy")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);