(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{626:function(t,n,e){"use strict";e.r(n);var o=e(17),r=Object(o.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",[t._v("react组建的生命周期")]),t._v(" "),e("p",[t._v("React组件的生命周期有两种情况，初次渲染和状态更新导致再次渲染。\nReact 生命周期分为三种状态 1. 挂载 2.更新 3.销毁")]),t._v(" "),e("h2",{attrs:{id:"组件加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件加载"}},[t._v("#")]),t._v(" 组件加载")]),t._v(" "),e("p",[t._v("组件的初次挂载，有以下几个步骤，分别是\n1、构造函数，指定This，初始状态，绑定函数（constructor）\n2、组件安装（componentWillMount）\n3、将组建或者虚拟DOM元素渲染到真实的DOM上（render）\n4、组件生成，DOM查找等(componentDidMount)")]),t._v(" "),e("h2",{attrs:{id:"组件更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件更新"}},[t._v("#")]),t._v(" 组件更新")]),t._v(" "),e("p",[t._v("组件的更新，有三种情况：\n1.父组件的props发生更新\n2.调用this.forceUpdate更新（重复componentWillUpdate方法之后的操作）\n3.调用this.setState方法更新组件state,触发组件更新")]),t._v(" "),e("h3",{attrs:{id:"状态更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态更新"}},[t._v("#")]),t._v(" 状态更新")]),t._v(" "),e("p",[t._v("步骤：\n1、构造函数，指定This，初始状态，绑定函数（constructor）\n2、组件安装（componentWillMount）\n3、将组建或者虚拟DOM元素渲染到真实的DOM上（render）\n4、组件生成，DOM查找等(componentDidMount)\n5、组建更新状态(componentWillUpdate)\n6、将组建或者虚拟DOM元素渲染到真实的DOM上（render）\n7、组建更新完成(componentDidUpdate)")]),t._v(" "),e("h3",{attrs:{id:"调用this-forceupdate更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用this-forceupdate更新"}},[t._v("#")]),t._v(" 调用this.forceUpdate更新")]),t._v(" "),e("p",[t._v("当组件调用forceUpdata方法更新时，会进入componentWillUpdate方法。\n直接跳过shouldComponentUpdtavoid\n之后执行render函数更新DOMReactElement\n执行完render函数之后执行componentDidUpdata,\n除了首次render之后调用componentDidMount，其它render结束之后都是调用componentDidUpdate。")]),t._v(" "),e("h3",{attrs:{id:"父组建更新props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#父组建更新props"}},[t._v("#")]),t._v(" 父组建更新props")]),t._v(" "),e("p",[t._v("步骤：\n1、父组件构造函数，指定This，初始状态，绑定函数（constructor）\n2、父组件安装（componentWillMount）\n3、父组件或者虚拟DOM元素渲染到真实的DOM上（render）\n4、子组件或者虚拟DOM元素渲染到真实的DOM上（render）\n5、父组件生成，DOM查找等(componentDidMount)\n6、父组建更新状态(componentWillUpdate)\n7、父组件或者虚拟DOM元素渲染到真实的DOM上（render）\n8、子组件接收父组件props(componentWillReceiveProps)\n9、子组件判断是否更新(shouldComponentUpdate)\n10、子组建更新状态(componentWillUpdate)\n11、子组件或者虚拟DOM元素渲染到真实的DOM上（render）\n12、子组件更新完成(componentDidUpdate)\n12、父组件更新完成(componentDidUpdate)")]),t._v(" "),e("h2",{attrs:{id:"组件销毁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件销毁"}},[t._v("#")]),t._v(" 组件销毁")]),t._v(" "),e("p",[t._v("单页应用中，切换页面原组件需要销毁释放资源，如果原组件中有定时器等不能销毁时，需要在componentWillUnmount中清理资源占用，手动销毁定时器。")]),t._v(" "),e("h1",[t._v("总结")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://github.com/kaisa911/studyNotes/blob/master/public/image/reactLifeCycle.png?raw=true",alt:"react生命周期"}})])])}),[],!1,null,null,null);n.default=r.exports}}]);